syntax = "proto3";
package protos;


service Messaging {
	rpc FetchMessages(ConversationFetch) returns (stream Message){}
	rpc SendMessage(Message) returns (Status){}
	rpc GetMessageStatus(stream Message) returns (stream MessageStatus){}
	
}

service Commenting {
	rpc PostComment(Comment) returns (Status) {}
	rpc DeleteComment(Comment) returns (Status) {}
	rpc EditComment(Comment) returns (Status) {}
}

service ProfileManaging{
	rpc GetProfile(Username) returns (Profile){}
	rpc FollowUnFollow(Username) returns (Status){}
	rpc ChangePrivacy(Username) returns (Status){}
	rpc ProfilePictureFeed(stream ProfileStream) returns (stream Picture){}
	rpc GetProfilePicture(Username) returns (Picture){}
	//Need services for editing profile

}

service Updating {
	rpc UpdateNotifications(NotificationBox) returns (NotificationBox){}
	rpc UpdateLikes(LikeBox) returns (LikeBox){}
	rpc UpdateComments(CommentBox) returns (CommentBox){}
	rpc UpdateMessages(MessageBox) returns (MessageBox){}
	rpc UpdateFeed(FeedBox) returns (FeedBox){}
	rpc BackgroundNotifications(stream Beat) returns (stream Notification){}
}

message Message {
	string text = 1;
	oneof course {
		User username = 2;
		Groupchat groupchat =3;
	}
	MessageStatus status = 4;
	int64 unixTime = 5;

}

message MessageStatus {
	enum StatusCode{
		SENT = 0;
		DELIVERED = 1;
		READ = 2;
	}
}

message User {

}

message Groupchat {

}

message GeneralStatus {
	
}